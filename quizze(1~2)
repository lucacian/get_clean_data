## getting cleaning data quiz 
## --- quizze 1-1--------------------------------------------------------------
library(httr)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url,"C:\\lecture3\\idaho.csv")
# read the data
idaho <- read.csv("C:\\lecture3\\idaho.csv")
# tabulate the value variable (VAL)
table(idaho$VAL)
# extract the value of code 24 (1,000,000+)
table(idaho$VAL)[[24]]

##---- quizze 1-2 -------------------------------- 1번과 연계
table(idaho$FES)
summary(idaho$FES)
idaho$FES[1:5]  
## The answer is: tidy data has one variable per column… 
## FES has: gender, marital status and empoloyement status.

##--quizze 1-3-------------------------------------------------------------------
library(xlsx)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx '
file.dest <- 'C:\\lecture3\\NGAP.xlsx'
# download from the URL
download.file(file.url, file.dest, mode="wb") ## absolutely, use 'mode'
# specify the rows and columns to import
rowIndex <- 18:23
colIndex <- 7:15
# read the xlsx file
dat <- read.xlsx(file.dest, sheetIndex=1, rowIndex = rowIndex, colIndex = colIndex)
# perform the required test
sum(dat$Zip*dat$Ext,na.rm=T)

##---quizze 1-4-----------------------------------------------------------
library(XML)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml'
file.dest <- 'C:\\lecture3\\balt.rest.xml'
# download from the URL
download.file(file.url, file.dest)
# read the XML file
doc <- xmlTreeParse('C:\\lecture3\\balt.rest.xml', useInternalNodes = TRUE)
# define the rootnode
rootNode <- xmlRoot(doc)
# write the zipcode data to a list
zipcode <- xpathSApply(rootNode, "//zipcode", xmlValue)
# table the zipcodes
table(zipcode)[['21231']]

## other answer
library(XML)
file <- "http://d396qusza40orc.cloudfront.net/getdata/data/restaurants.xml"
doc <- xmlTreeParse(file=file,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
zipcode <- xpathSApply(rootNode, "//zipcode", xmlValue)
length(zipcode[zipcode==21231])

##---- quizze 1-5------------------------------------------------
## 퀴즈 1번의 자료 사용

library(data.table)
DT <- fread("C:\\lecture3\\idaho.csv")
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15), mean(DT[DT$SEX==2,]$pwgtp15))
system.time(rowMeans(DT)[DT$SEX==1], rowMeans(DT)[DT$SEX==2])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))



##----- quizze 2-1 ---------------------------------------

library(httr)
# oauth_endpoints("github")

# 2. Register an application at https://github.com/settings/applications
# Insert your values below - if secret is omitted, it will look it up in
# the GITHUB_CONSUMER_SECRET environmental variable.
#
# Use http://localhost:1410 as the callback url

myapp <- oauth_app("github", key="7eeb5753524e12ead876",
                   secret="a960d1daf53306726868b929ec0dacbfd86625e2")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
req <- GET("https://api.github.com/users/jtleek/repos")
stop_for_status(req)
a <- content(req)

# OR :
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
content(req)


##----- quizze 2-2-------------------------------------------

url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv'
download.file(url,"C:\\lecture3\\quizze2-3.csv")
acs <- read.csv("C:\\lecture3\\quizze2-3.csv")

library(sqldf)

sqldf("select * from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50") ##  answer
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select * from acs") 


unique(acs$AGEP)

sqldf("select AGEP where unique from acs")
sqldf("select distinct pwgtp1 from acs")
sqldf("select distinct AGEP from acs") ## answer
sqldf("select unique AGEP from acs") 


##----- quizze 2-4 ---------------------------------------------

con =url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
sapply(htmlCode[c(10,20,30,100)], nchar)

# OR
lines <- readLines(con)
l10 <- lines[10]
l20 <- lines[20]
l30 <- lines[30]
l100 <- lines[100]

nchar(l10)
nchar(l20)
nchar(l30)
nchar(l100)

##----- quizze 2-5 ---------------------------------------------

url ="https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"

download.file(url,"C:\\lecture3\\quizze2-5.for")

wksst <- read.fwf("C:\\lecture3\\quizze2-5.for",skip=4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
# width는 왼쪽 첫번째 글자부터 문자를 읽어들일 갯수. 위의 것으로 말하면 
# 처음12개 다음은7개 4개 이런식임. 원본데이터보고 글자수 세어봐야함..
head(wksst)
sum(wksst$V4)
